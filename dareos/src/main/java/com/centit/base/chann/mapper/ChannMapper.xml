<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.centit.base.chann.mapper.ChannMapper">
	
		<!-- 使用LLGL装载结果集 -->
		<resultMap id="ChannModel" type="com.centit.base.chann.model.ChannModel">
			<result column="CHANN_ID" property="CHANN_ID" />
		</resultMap>
		
		<resultMap id="DeliveraddrModelChld" type="com.centit.base.chann.model.DeliveraddrModelChld">
			<result column="DELIVER_ADDR_ID" property="DELIVER_ADDR_ID" />
			<result column="CHANN_ID" property="CHANN_ID" />
			<result column="DELIVER_ADDR_NO" property="DELIVER_ADDR_NO" />
			<result column="DELIVER_DTL_ADDR" property="DELIVER_DTL_ADDR" />
			<result column="STATE" property="STATE" />
			<result column="DEL_FLAG" property="DEL_FLAG" />
			<result column="PERSON_CON" property="PERSON_CON" />
			<result column="TEL" property="TEL" />
			<result column="TRANSPORT" property="TRANSPORT" />
		</resultMap>
		
		<!-- 动态查询 and 列表排序 -->
		<sql id="queryDynSql"> 
			
			<if test="CHANN_TYPE !=null and CHANN_TYPE !='' "> and c.CHANN_TYPE=#{CHANN_TYPE}</if>
			<if test="AREA_ID !=null and AREA_ID !='' "> and c.AREA_ID like '%'||#{AREA_ID}||'%'</if>
			<if test="AREA_NO !=null and AREA_NO !='' "> and c.AREA_NO like '%'||#{AREA_NO}||'%'</if>
			<if test="AREA_NAME !=null and AREA_NAME !='' "> and c.AREA_NAME like '%'||#{AREA_NAME}||'%'</if>
			<if test="STATE !=null and STATE !='' "> and c.STATE=#{STATE}</if>
			<if test="CHAA_LVL !=null and CHAA_LVL !='' "> and c.CHAA_LVL=#{CHAA_LVL}</if>
			<if test="BEGIN_CRE_TIME !=null and BEGIN_CRE_TIME !='' "> and c.CRE_TIME &gt;= to_date(#{BEGIN_CRE_TIME},'yyyy-MM-DD HH24:MI:SS')</if>
			<if test="END_CRE_TIME !=null and END_CRE_TIME !='' "> and c.CRE_TIME &lt;= to_date(#{END_CRE_TIME},'yyyy-MM-DD HH24:MI:SS')</if>
			<if test="BEGIN_JOIN_DATE !=null and BEGIN_JOIN_DATE !='' "> and c.JOIN_DATE &gt;= to_date(#{BEGIN_JOIN_DATE},'yyyy-MM-DD')</if>
			<if test="END_JOIN_DATE !=null and END_JOIN_DATE !='' "> and c.JOIN_DATE &lt;= to_date(#{END_JOIN_DATE},'yyyy-MM-DD')</if>
			<if test="DEL_FLAG !=null and DEL_FLAG !='' "> and c.DEL_FLAG=#{DEL_FLAG}</if>
			<if test="IS_BASE_FLAG !=null and IS_BASE_FLAG !='' "> and c.IS_BASE_FLAG=#{IS_BASE_FLAG}</if>
			<if test="AREA_MANAGE_NAME !=null and AREA_MANAGE_NAME !='' "> and c.AREA_MANAGE_NAME=#{AREA_MANAGE_NAME}</if>
			<if test="CHANN_NOQuery !=null and CHANN_NOQuery !='' "> ${CHANN_NOQuery}</if>
			<if test="CHANN_NAMEQuery !=null and CHANN_NAMEQuery !='' "> ${CHANN_NAMEQuery}</if>
			<if test="CHANN_NO_PQuery !=null and CHANN_NO_PQuery !='' "> ${CHANN_NO_PQuery}</if>
			<if test="CHANN_NAME_PQuery !=null and CHANN_NAME_PQuery !='' "> ${CHANN_NAME_PQuery}</if>
			<if test="PROVQuery !=null and PROVQuery !='' "> ${PROVQuery}</if>
			<if test="AREA_NAME_PQuery !=null and AREA_NAME_PQuery !='' "> and c.AREA_ID in (select AREA_ID from BASE_AREA where 1=1
				${AREA_NAME_PQuery})</if>
			<if test="CITY !=null and CITY !='' "> and c.CITY like '%'||#{CITY}||'%'</if>
			<if test="COUNTY !=null and COUNTY !='' "> and c.COUNTY like '%'||#{COUNTY}||'%'</if>
			<if test="QXJBCON !=null and QXJBCON !='' "> and ${QXJBCON}		   </if>
			
			<if test="CHANN_NAME_EQ !=null and CHANN_NAME_EQ !='' ">and <![CDATA[c.CHANN_NAME = #{CHANN_NAME_EQ}]]></if>
		</sql>
	    <sql id="orderSql">
	    	<if test="orderField != null and orderField != ''">
	    		order by  ${orderField}
	    	</if>
		</sql>
		
		<sql id="batchSql">
		  <![CDATA[ 
				  select 
				   u.CHANN_ID,
			       u.CHANN_NO,
			       u.CHANN_NAME,
			       u.CHANN_TYPE,
			       u.CHAA_LVL,
			       u.CHANN_NAME_P,
			       u.AREA_NO,
			       u.AREA_NAME,
			       u.CRE_NAME,
			       u.CRE_TIME,
			       u.DEPT_NAME,
			       u.STATE
				   FROM BASE_CHANN u
		   ]]>
		    <where>
			   <include refid="queryBatchSql" />
			</where>
			   <include refid="orderSql"/>
	</sql>
	
		<!-- 查询SQL -->
		<sql id="coreSql">
			<![CDATA[
					select c.CHANN_ID,
				       c.CHANN_NO,
				       c.CHANN_NAME,
				       c.CHANN_TYPE,
				       c.CHANN_NAME_P,
				       c.AREA_NO,
				       c.CHAA_LVL,
				       c.AREA_NAME,
				       c.CREATOR,
				       c.CRE_NAME,
				       to_char(c.CRE_TIME, 'yyyy-MM-DD HH24:MI:SS') CRE_TIME,
				       c.DEPT_ID,
				       c.DEPT_NAME,
				       c.STATE,
				       NVL(c.REBATE_TOTAL, 0) REBATE_TOTAL,
				       NVL(c.REBATE_CURRT, 0) REBATE_CURRT,
				       NVL(c.REBATE_USED, 0) REBATE_USED
				       from BASE_CHANN c
					]]>
			<where>
				<include refid="queryDynSql" />
			</where>
				<include refid="orderSql"/>
		</sql>
		
		<!-- 分页查询 -->
		<select id="pageQuery" parameterType="map"
			resultType="java.util.HashMap">
			<include refid="coreSql" />
		</select>
		
		<sql id="queryBatchSql">
		  <!-- 渠道分管 -->
		     u.STATE='启用' and u.DEL_FLAG=0 
		  	<if test="PLAN_YEAR !=null and PLAN_YEAR !='' "> and s.PLAN_YEAR = #{PLAN_YEAR} 		  </if>
			<if test="AREA_NOQuery !=null and AREA_NOQuery !='' "> ${AREA_NOQuery} 		  </if>
			<if test="AREA_NAMEQuery !=null and AREA_NAMEQuery !='' "> ${AREA_NAMEQuery} 		  </if>
			<if test="CHANN_NOQuery !=null and CHANN_NOQuery !='' "> ${CHANN_NOQuery} 		  </if>
			<if test="CHANN_NAMEQuery !=null and CHANN_NAMEQuery !='' "> ${CHANN_NAMEQuery} 		  </if>
		</sql>
	
		<select id="pageBatch" parameterType="map" resultType="java.util.HashMap">
			<include refid="batchSql" />
	    </select>
	    
	    <select id="pageBatchCount" parameterType="map" resultType="int">
		      <![CDATA[select count(0) cnt  from BASE_CHANN u
		      ]]>
			<where>
				<include refid="queryBatchSql"/>
			</where>
	    </select>
	
		<!-- 分页计数 -->
		<select id="pageCount" parameterType="map" resultType="int">
			<![CDATA[SELECT count(CHANN_ID) cnt FROM BASE_CHANN c ]]>
			<where>
				<include refid="queryDynSql"/>
			</where>
		</select>
	
	   <!-- 查询 -->
		<select id="query" parameterType="map"
			resultType="java.util.HashMap">
			<include refid="coreSql" />
		</select>
		<!-- 根据ID查找 -->
		<!-- //0156117 Start 刘曰刚  2014/06/16// -->
		<!-- 新加查询区域经理信息 -->
		<select id="loadById" parameterType="map"
			resultType="java.util.HashMap">
			<![CDATA[
					select 
						CHANN_ID,
						CHANN_NO,
						CHANN_NAME,
						CHANN_ABBR,
						CHANN_TYPE,
						CHAA_LVL,
						CHANN_ID_P,
						CHANN_NO_P,
						CHANN_NAME_P,
						AREA_ID,
			 			AREA_NO,
			 			AREA_NAME,
			 			ZONE_ID,
			 			NATION,
			 			PROV,
			 			CITY,
			 			COUNTY,
			 			CITY_TYPE,
			 			PERSON_CON,
			 			TEL,
			 			MOBILE,
			 			TAX,
			 			POST,
			 			ADDRESS,
			 			EMAIL,
					 	WEB,
					 	LEGAL_REPRE,
					 	BUSS_LIC,
					 	AX_BURDEN,
					 	ORG_CODE_CERT,
					 	BUSS_NATRUE,
					 	BUSS_SCOPE,
					 	VAT_NO,
					 	INVOICE_TI,
					 	INVOICE_ADDR,
					 	BANK_NAME,
					 	BANK_ACCT,
					 	FI_CMP_NO,
					 	DEPOSIT,
					 	DEBT_DEF,
					 	PRICE_CLAUSE,
					 	BUSS_LIC_ATT,
					 	TAX_BURDEN_ATT,
					 	ORG_CERT_ATT,
					 	STATE,
					 	REMARK,
					 	CREATOR,
					 	CRE_NAME, 
					 	to_char(CRE_TIME,'yyyy-MM-DD HH24:MI:SS') CRE_TIME,
					 	UPDATOR,
					 	UPD_NAME,
					 	to_char(UPD_TIME,'yyyy-MM-DD HH24:MI:SS') UPD_TIME,
					 	DEPT_ID,
					 	DEPT_NAME,
					 	ORG_ID,
					 	ORG_NAME,
					 	LEDGER_ID,
					 	LEDGER_NAME,
					 	REBATE_TOTAL,
					 	REBATE_YEAR,
					 	NVL(REBATE_CURRT,0) REBATE_CURRT,
					 	REBATE_USED,
					 	REBATE_FREEZE,
					 	NVL(CREDIT_CURRT,0) CREDIT_CURRT,
					 	CREDIT_USED,
					 	NVL(TEMP_CREDIT,0) TEMP_CREDIT,
					 	TEMP_CREDIT_VALDT,
					 	DEL_FLAG,
					 	PAY_RATE,
					 	SHIP_POINT_ID,
					 	SHIP_POINT_NO,
					 	SHIP_POINT_NAME,
			 			AREA_SER_ID,
			 			AREA_SER_NO,
			 			AREA_SER_NAME,
			 			TERM_DECT_CTR_FLAG,
			 			NVL(PAYMENT_CREDIT,0)PAYMENT_CREDIT,
			 			to_char(JOIN_DATE,'yyyy-MM-DD') JOIN_DATE,
			 			AREA_MANAGE_ID,
						AREA_MANAGE_NAME,
						AREA_MANAGE_TEL,
						CHAA_SALE_LVL,
						INI_CREDIT,
						TAX_RATE,
						COST_TYPE,
						INIT_YEAR,
						INIT_MONTH,
						TAX_RATE,
						COST_TYPE,
						IS_UPDATE_STOREIN_FLAG
					    from BASE_CHANN c where c.CHANN_ID = #{CHANN_ID} and DEL_FLAG=0
			]]>
		</select>
		<!-- //0156117 End 刘曰刚 2014/06/16// -->
		<select id="getCountCHANN_NO" parameterType="String" resultType="int">
		    select count(CHANN_NO) from BASE_CHANN where CHANN_NO=#{CHANN_NO}
		</select>
	
		<select id="loadSTATE" parameterType="String" resultType="String">
			<![CDATA[ select STATE from BASE_CHANN c WHERE c.CHANN_ID = #{CHANN_ID} and DEL_FLAG=0]]>
		</select>
		
		<!-- // 0156117 Start 刘曰刚 2014/06/16// -->
		<!-- 修改描述：增加新增区域经理信息 -->
		<insert id="insert" parameterType="map">
			<![CDATA[
			 insert into BASE_CHANN(
			 	CHANN_ID,CHANN_NO,CHANN_NAME,CHANN_ABBR,CHANN_TYPE,CHAA_LVL,CHANN_ID_P,CHANN_NO_P,CHANN_NAME_P,AREA_ID,
			 	AREA_NO,AREA_NAME,ZONE_ID,NATION,PROV,CITY,COUNTY,CITY_TYPE,PERSON_CON,TEL,MOBILE,TAX,POST,ADDRESS,EMAIL,
			 	WEB,LEGAL_REPRE,BUSS_LIC,AX_BURDEN,ORG_CODE_CERT,BUSS_NATRUE,BUSS_SCOPE,VAT_NO,INVOICE_TI,INVOICE_ADDR,
			 	BANK_NAME,BANK_ACCT,FI_CMP_NO,DEPOSIT,DEBT_DEF,PRICE_CLAUSE,BUSS_LIC_ATT,TAX_BURDEN_ATT,ORG_CERT_ATT,STATE,
			 	REMARK,CREATOR,CRE_NAME,CRE_TIME,DEPT_ID,DEPT_NAME,ORG_ID,ORG_NAME,LEDGER_ID,
			 	LEDGER_NAME,DEL_FLAG,PAY_RATE,SHIP_POINT_ID,SHIP_POINT_NO,SHIP_POINT_NAME,AREA_SER_ID,AREA_SER_NO,AREA_SER_NAME,
			 	TERM_DECT_CTR_FLAG,PUNISH_FLAG,JOIN_DATE,IS_BASE_FLAG,AREA_MANAGE_ID,AREA_MANAGE_NAME,AREA_MANAGE_TEL,CHAA_SALE_LVL,INIT_YEAR,INIT_MONTH,
			 	TAX_RATE,COST_TYPE
			 	)
			 values(
				#{CHANN_ID,jdbcType=VARCHAR},
				#{CHANN_NO,jdbcType=VARCHAR},
				#{CHANN_NAME,jdbcType=VARCHAR},
				#{CHANN_ABBR,jdbcType=VARCHAR},
				#{CHANN_TYPE,jdbcType=VARCHAR},
				#{CHAA_LVL,jdbcType=VARCHAR},
				#{CHANN_ID_P,jdbcType=VARCHAR},
				#{CHANN_NO_P,jdbcType=VARCHAR},
				#{CHANN_NAME_P,jdbcType=VARCHAR},
				#{AREA_ID,jdbcType=VARCHAR},
			 	#{AREA_NO,jdbcType=VARCHAR},
			 	#{AREA_NAME,jdbcType=VARCHAR},
			 	#{ZONE_ID,jdbcType=VARCHAR},
			 	#{NATION,jdbcType=VARCHAR},
			 	#{PROV,jdbcType=VARCHAR},
			 	#{CITY,jdbcType=VARCHAR},
			 	#{COUNTY,jdbcType=VARCHAR},
			 	#{CITY_TYPE,jdbcType=VARCHAR},
			 	#{PERSON_CON,jdbcType=VARCHAR},
			 	#{TEL,jdbcType=VARCHAR},
			 	#{MOBILE,jdbcType=VARCHAR},
			 	#{TAX,jdbcType=VARCHAR},
			 	#{POST,jdbcType=VARCHAR},
			 	#{ADDRESS,jdbcType=VARCHAR},
			 	#{EMAIL,jdbcType=VARCHAR},
			 	#{WEB,jdbcType=VARCHAR},
			 	#{LEGAL_REPRE,jdbcType=VARCHAR},
			 	#{BUSS_LIC,jdbcType=VARCHAR},
			 	#{AX_BURDEN,jdbcType=VARCHAR},
			 	#{ORG_CODE_CERT,jdbcType=VARCHAR},
			 	#{BUSS_NATRUE,jdbcType=VARCHAR},
			 	#{BUSS_SCOPE,jdbcType=VARCHAR},
			 	#{VAT_NO,jdbcType=VARCHAR},
			 	#{INVOICE_TI,jdbcType=VARCHAR},
			 	#{INVOICE_ADDR,jdbcType=VARCHAR},
			 	#{BANK_NAME,jdbcType=VARCHAR},
			 	#{BANK_ACCT,jdbcType=VARCHAR},
			 	#{FI_CMP_NO,jdbcType=VARCHAR},
			 	#{DEPOSIT,jdbcType=VARCHAR},
			 	#{DEBT_DEF,jdbcType=VARCHAR},
			 	#{PRICE_CLAUSE,jdbcType=VARCHAR},
			 	#{BUSS_LIC_ATT,jdbcType=VARCHAR},
			 	#{TAX_BURDEN_ATT,jdbcType=VARCHAR},
			 	#{ORG_CERT_ATT,jdbcType=VARCHAR},
			 	#{STATE,jdbcType=VARCHAR},
			 	#{REMARK,jdbcType=VARCHAR},
			 	#{CREATOR,jdbcType=VARCHAR},
			 	#{CRE_NAME,jdbcType=VARCHAR},
			 	sysdate,
			 	#{DEPT_ID,jdbcType=VARCHAR},
			 	#{DEPT_NAME,jdbcType=VARCHAR},
			 	#{ORG_ID,jdbcType=VARCHAR},
			 	#{ORG_NAME,jdbcType=VARCHAR},
			 	#{LEDGER_ID,jdbcType=VARCHAR},
			 	#{LEDGER_NAME,jdbcType=VARCHAR},
			 	#{DEL_FLAG,jdbcType=VARCHAR},
			 	#{PAY_RATE,jdbcType=VARCHAR},
			 	#{SHIP_POINT_ID,jdbcType=VARCHAR},
			 	#{SHIP_POINT_NO,jdbcType=VARCHAR},
			 	#{SHIP_POINT_NAME,jdbcType=VARCHAR},
			 	#{AREA_SER_ID,jdbcType=VARCHAR},
			 	#{AREA_SER_NO,jdbcType=VARCHAR},
			 	#{AREA_SER_NAME,jdbcType=VARCHAR},
			 	#{TERM_DECT_CTR_FLAG,jdbcType=VARCHAR},
			 	#{PUNISH_FLAG,jdbcType=VARCHAR},
			 	to_date(#{JOIN_DATE,jdbcType=VARCHAR},'yyyy-MM-DD'),
			 	#{IS_BASE_FLAG,jdbcType=VARCHAR},
			 	#{AREA_MANAGE_ID,jdbcType=VARCHAR},
			 	#{AREA_MANAGE_NAME,jdbcType=VARCHAR},
			 	#{AREA_MANAGE_TEL,jdbcType=VARCHAR},
			 	#{CHAA_SALE_LVL,jdbcType=VARCHAR},
			 	#{INIT_YEAR,jdbcType=VARCHAR},
			 	#{INIT_MONTH,jdbcType=VARCHAR},
			 	#{TAX_RATE,jdbcType=VARCHAR},
			 	#{COST_TYPE,jdbcType=VARCHAR}
			 )
			]]>
		</insert>
		<!-- // 0156117 End 刘曰刚 2014/06/16// -->
		<update id="updateById" parameterType="map">
			 <![CDATA[ update BASE_CHANN ]]>
			 	<set>
				<if test="CHANN_NO !=null">CHANN_NO = #{CHANN_NO},</if>
				<if test="CHANN_NAME !=null">CHANN_NAME = #{CHANN_NAME},</if>
				<if test="CHANN_ABBR !=null">CHANN_ABBR = #{CHANN_ABBR},</if>
				<if test="CHANN_TYPE !=null">CHANN_TYPE = #{CHANN_TYPE},</if>
				<if test="CHAA_LVL !=null">CHAA_LVL = #{CHAA_LVL},</if>
				<if test="CHANN_ID_P !=null">CHANN_ID_P = #{CHANN_ID_P},</if>
				<if test="CHANN_NO_P !=null">CHANN_NO_P = #{CHANN_NO_P},</if>
				<if test="CHANN_NAME_P !=null">CHANN_NAME_P = #{CHANN_NAME_P},</if>
				<if test="AREA_ID !=null">AREA_ID = #{AREA_ID},</if>
				<if test="AREA_NO !=null">AREA_NO = #{AREA_NO},</if>
				<if test="AREA_NAME !=null">AREA_NAME = #{AREA_NAME},</if>
				<if test="ZONE_ID !=null">ZONE_ID = #{ZONE_ID},</if>
				<if test="NATION !=null">NATION = #{NATION},</if>
				<if test="PROV !=null">PROV = #{PROV},</if>
				<if test="CITY !=null">CITY = #{CITY},</if>
				<if test="COUNTY !=null">COUNTY = #{COUNTY},</if>
				<if test="CITY_TYPE !=null">CITY_TYPE = #{CITY_TYPE},</if>
				<if test="PERSON_CON !=null">PERSON_CON = #{PERSON_CON},</if>
				<if test="TEL !=null">TEL = #{TEL},</if>
				<if test="MOBILE !=null">MOBILE = #{MOBILE},</if>
				<if test="TAX !=null">TAX = #{TAX},</if>
				<if test="POST !=null">POST = #{POST},</if>
				<if test="ADDRESS !=null">ADDRESS = #{ADDRESS},</if>
				<if test="EMAIL !=null">EMAIL = #{EMAIL},</if>
				<if test="WEB !=null">WEB = #{WEB},</if>
				<if test="LEGAL_REPRE !=null">LEGAL_REPRE = #{LEGAL_REPRE},</if>
				<if test="BUSS_LIC !=null">BUSS_LIC = #{BUSS_LIC},</if>
				<if test="AX_BURDEN !=null">AX_BURDEN = #{AX_BURDEN},</if>
				<if test="ORG_CODE_CERT !=null">ORG_CODE_CERT = #{ORG_CODE_CERT},</if>
				<if test="BUSS_NATRUE !=null">BUSS_NATRUE = #{BUSS_NATRUE},</if>
				<if test="BUSS_SCOPE !=null">BUSS_SCOPE = #{BUSS_SCOPE},</if>
				<if test="VAT_NO !=null">VAT_NO = #{VAT_NO},</if>
				<if test="LEDGER_ID !=null">LEDGER_ID = #{LEDGER_ID},</if>
				<if test="LEDGER_NAME !=null">LEDGER_NAME = #{LEDGER_NAME},</if>
				<if test="INVOICE_TI !=null">INVOICE_TI = #{INVOICE_TI},</if>
				<if test="INVOICE_ADDR !=null">INVOICE_ADDR = #{INVOICE_ADDR},</if>
				<if test="BANK_NAME !=null">BANK_NAME = #{BANK_NAME},</if>
				<if test="BANK_ACCT !=null">BANK_ACCT = #{BANK_ACCT},</if>
				<if test="FI_CMP_NO !=null">FI_CMP_NO = #{FI_CMP_NO},</if>
				<if test="DEPOSIT !=null">DEPOSIT = #{DEPOSIT},</if>
				<if test="DEBT_DEF !=null">DEBT_DEF = #{DEBT_DEF},</if>
				<if test="PRICE_CLAUSE !=null">PRICE_CLAUSE = #{PRICE_CLAUSE},</if>
				<if test="BUSS_LIC_ATT !=null">BUSS_LIC_ATT = #{BUSS_LIC_ATT},</if>
				<if test="TAX_BURDEN_ATT !=null">TAX_BURDEN_ATT = #{TAX_BURDEN_ATT},</if>
				<if test="ORG_CERT_ATT !=null">ORG_CERT_ATT = #{ORG_CERT_ATT},</if>
				<if test="STATE !=null">STATE = #{STATE},</if>
				<if test="REMARK !=null">REMARK = #{REMARK},</if>
				<if test="UPDATOR !=null">UPDATOR = #{UPDATOR},</if>
				<if test="UPD_NAME !=null">UPD_NAME = #{UPD_NAME},</if>
				<if test="UPD_TIME !=null">UPD_TIME = sysdate,</if>
				<if test="PAY_RATE !=null">PAY_RATE = #{PAY_RATE},</if>
				<if test="SHIP_POINT_ID !=null">SHIP_POINT_ID = #{SHIP_POINT_ID},</if>
				<if test="SHIP_POINT_NO !=null">SHIP_POINT_NO = #{SHIP_POINT_NO},</if>
				<if test="SHIP_POINT_NAME !=null">SHIP_POINT_NAME = #{SHIP_POINT_NAME},</if>
				<if test="AREA_SER_ID !=null">AREA_SER_ID = #{AREA_SER_ID},</if>
				<if test="AREA_SER_NO !=null">AREA_SER_NO = #{AREA_SER_NO},</if>
				<if test="AREA_SER_NAME !=null">AREA_SER_NAME = #{AREA_SER_NAME},</if>
				<if test="TERM_DECT_CTR_FLAG !=null">TERM_DECT_CTR_FLAG = #{TERM_DECT_CTR_FLAG},</if>
				<if test="JOIN_DATE !=null">JOIN_DATE = to_date(#{JOIN_DATE},'yyyy-MM-DD'),</if>
				<if test="INIT_YEAR !=null">INIT_YEAR = #{INIT_YEAR},</if>
				<if test="INIT_MONTH !=null">INIT_MONTH = #{INIT_MONTH},</if>
				<if test="TAX_RATE !=null">TAX_RATE = #{TAX_RATE},</if>
				<if test="COST_TYPE !=null">COST_TYPE = #{COST_TYPE},</if>
				<if test="REBATE_TOTAL !=null">REBATE_TOTAL = #{REBATE_TOTAL},</if>
				<if test="REBATE_CURRT !=null">REBATE_CURRT = #{REBATE_CURRT},</if>
				<if test="REBATE_USED !=null">REBATE_USED = #{REBATE_USED},</if>
				<if test="REBATE_UPD_NAME !=null">REBATE_UPD_NAME = #{REBATE_UPD_NAME},</if>
				<if test="REBATE_UPD_TIME !=null">REBATE_UPD_TIME = sysdate,</if>
				<if test="CHAA_SALE_LVL !=null">CHAA_SALE_LVL = #{CHAA_SALE_LVL},</if>
				<if test="AREA_MANAGE_ID !=null">AREA_MANAGE_ID = #{AREA_MANAGE_ID},</if>
				<if test="AREA_MANAGE_NAME !=null">AREA_MANAGE_NAME = #{AREA_MANAGE_NAME},</if>
				<if test="AREA_MANAGE_TEL !=null">AREA_MANAGE_TEL = #{AREA_MANAGE_TEL},</if>
				<if test="IS_UPDATE_STOREIN_FLAG !=null">IS_UPDATE_STOREIN_FLAG = #{IS_UPDATE_STOREIN_FLAG},</if>
				
				</set>
			<![CDATA[ where CHANN_ID = #{CHANN_ID} ]]>
		</update>
		<update id="delete" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
			<set>
				<if test="DEL_FLAG !=null">DEL_FLAG = #{DEL_FLAG},</if>
				<if test="UPDATOR !=null">UPDATOR = #{UPDATOR},</if>
				<if test="UPD_NAME !=null">UPD_NAME = #{UPD_NAME},</if>
				<if test="UPD_TIME !=null">sysdate,</if>
			</set>
			<![CDATA[ where CHANN_ID in(select CHANN_ID from BASE_CHANN
	                           start with CHANN_ID = #{CHANN_ID}
	                          connect by prior CHANN_ID = CHANN_ID_P) ]]>		
		</update>
		<select id="getWtyXJ" parameterType="map" resultType="int">
			<![CDATA[select count(0) from (  SELECT * FROM BASE_CHANN T start with CHANN_ID=#{CHANN_ID} connect by prior CHANN_ID = CHANN_ID_P) u where u.STATE='启用' and CHANN_ID <>#{CHANN_ID} and DEL_FLAG=0]]>
		</select>
		<update id="updateStateById" parameterType="map">	
			<![CDATA[ update BASE_CHANN ]]>
			<set>
				<if test="STATE !=null">STATE = #{STATE},</if>
				<if test="UPDATOR !=null">UPDATOR = #{UPDATOR},</if>
				<if test="UPD_NAME !=null">UPD_NAME = #{UPD_NAME},</if>
				<if test="UPD_TIME !=null">UPD_TIME =sysdate,</if>
			</set>
			<![CDATA[ where CHANN_ID in(select CHANN_ID from BASE_CHANN
	                           start with CHANN_ID = #{CHANN_ID}
	                          connect by prior CHANN_ID = CHANN_ID_P) ]]>	
		</update>
		<!-- 审核后修改临时信用和时间 -->
		<update id="updateTempCredit" parameterType="map">
			<![CDATA[ update BASE_CHANN ]]>
			<set>
				<if test="TEMP_CREDIT !=null">TEMP_CREDIT = #{TEMP_CREDIT},</if>
				<if test="TEMP_CREDIT_VALDT !=null">TEMP_CREDIT_VALDT =#{TEMP_CREDIT_VALDT},</if>
			</set>
			<![CDATA[ where CHANN_ID =#{CHANN_ID} ]]>	
		</update>
		
		<select id="isHaveRebate" parameterType="map" resultMap="ChannModel">
			<![CDATA[select  u.CHANN_NAME from BASE_CHANN u where  NVL(u.REBATE_FREEZE,0)>0  and u.STATE =#{STATE}]]>
		</select>
		
		<!-- 返利登记 清空返利后执行的操作 -->
		<update id="updateRebateByState" parameterType="map">
			 <![CDATA[ update BASE_CHANN ]]>
			<set>
				<if test="REBATE_TOTAL !=null">REBATE_TOTAL = #{REBATE_TOTAL},</if>
				<if test="REBATE_CURRT !=null">REBATE_CURRT = #{REBATE_CURRT},</if>
				<if test="REBATE_UPD_NAME !=null">REBATE_UPD_NAME = #{REBATE_UPD_NAME},</if>
				<if test="REBATE_UPD_TIME !=null">REBATE_UPD_TIME = sysdate,</if>
			</set>
			<![CDATA[ where STATE = #{STATE} ]]>
		</update>
		
		<!-- 返利登记 清空返利后执行的操作  返利历史信息 -->
		<insert id="insertRebateHis" parameterType="map">
			insert  into ERP_REBATE_HIS(REBATE_HIS_ID,CHANN_ID,REBATE_TOTAL,REBATE_CURRT,REBATE_FREEZE,
			        CLEAN_PSON_ID,CLEAN_PSON_NAME,CLEAN_TIME)
	              Select 
	              	CHANN_ID, 
	              	CHANN_ID,
	              	REBATE_TOTAL,
	              	REBATE_CURRT, 
	              	REBATE_FREEZE ,
	              	#{CLEAN_PSON_ID},
	              	#{CLEAN_PSON_NAME},
	              	sysdate
	               from  BASE_CHANN where STATE=#{STATE}
		</insert>
		<select id="getSTATE" parameterType="string" resultType="string">
			<![CDATA[
				select STATE from BASE_CHANN where CHANN_ID=#{CHANN_ID}
			]]>
		</select>
		<!-- 插入帐套信息 -->
		<insert id="insertT_SYS_ZTXX" parameterType="map">
			<![CDATA[
				insert into T_SYS_ZTXX(
					ZTXXID,
					ZTBH,
					ZTMC,
					YJZBJ,
					STATE,
					ZTLB,
					DELFLAG,
					IS_DRP_LEDGER,
					CRENAME,
					CRETIME
				)
				select 
					CHANN_ID,
					CHANN_NO,
					CHANN_NAME,
					#{YJZBJ},
					#{STATE},
					#{ZTLB},
					#{DELFLAG},
					#{IS_DRP_LEDGER},
					#{CRENAME},
					sysdate
				from BASE_CHANN  where CHANN_ID=#{CHANN_ID}
			]]>
		</insert>
		<!-- 插入机构信息 -->
		<insert id="insertT_SYS_JGXX" parameterType="map">
			<![CDATA[
				insert into T_SYS_JGXX(
					JGXXID,
					JGBH,
					JGMC,
					ZTXXID,
					SJJG,
					JGZT,
					DELFLAG,
					IS_DRP_LEDGER,
					CRENAME,
					CRETIME
				)
				select 
					CHANN_ID,
					CHANN_NO,
					CHANN_NAME,
					CHANN_ID,
					'',
					#{STATE},
					#{DELFLAG},
					#{IS_DRP_LEDGER},
					#{CRENAME},
					sysdate
				from BASE_CHANN where CHANN_ID=#{CHANN_ID}
			]]>
		</insert>
		<insert id="insertT_SYS_BMXX" parameterType="map">
			insert into T_SYS_BMXX(
				BMXXID,
				BMBH,
				BMMC,
				BMZT,
				SJBM,
				JGXXID,
				ZTXXID,
				DELFLAG,
				IS_DRP_LEDGER
			)
			select 
				CHANN_ID,
				CHANN_NO,
				CHANN_NAME,
				#{STATE},
				#{SJBM},
				CHANN_ID,
				CHANN_ID,
				#{DELFLAG},
				#{IS_DRP_LEDGER}
			from BASE_CHANN where CHANN_ID=#{CHANN_ID}
		</insert>
		<insert id="insertT_SYS_RYXX" parameterType="map">
			 insert into T_SYS_RYXX(
			 	RYXXID,
			 	RYBH,
			 	XM,
			 	XB,
			 	RYZT,
			 	RYJB,
			 	JGXXID,
			 	BMXXID,
			 	DELFLAG,
			 	IS_DRP_LEDGER,
			 	CRENAME,
			 	CRETIME,
			 	RYLB
			 )
			select 
				CHANN_ID,
				CHANN_NO,
				#{XM},
				#{XB},
				#{STATE},
				#{RYJB},
				CHANN_ID,
				CHANN_ID,
				#{DELFLAG},
				#{IS_DRP_LEDGER},
				#{CRENAME},
				sysdate,
				#{RYLB}
			from BASE_CHANN where CHANN_ID=#{CHANN_ID}
		</insert>
		<insert id="insertT_SYS_XTYH" parameterType="map">
			insert into T_SYS_XTYH(
				XTYHID,
				ZTXXID,
				JGXXID,
				BMXXID,
				RYXXID,
				YHBH,
				YHM,
				YHKL,
				YHZT,
				YHLB,
				DELFLAG,
				IS_DRP_LEDGER
			)
			select 
				CHANN_ID,
				CHANN_ID,
				CHANN_ID,
				CHANN_ID,
				CHANN_ID,
				CHANN_NO,
				CHANN_NO,
				#{YHKL},
				#{STATE},
				#{YHLB},
				#{DELFLAG},
				#{IS_DRP_LEDGER}
			from BASE_CHANN where CHANN_ID=#{CHANN_ID}
		</insert>
		<insert id="insertT_SYS_XTYHZTDZ" parameterType="map">
			insert into T_SYS_XTYHZTDZ(
				XTYHZTDZID,
				ZTXXID,
				XTYHID
			)
			select 
				CHANN_ID,
				CHANN_ID,
				CHANN_ID
			from BASE_CHANN where CHANN_ID=#{CHANN_ID}
		</insert>
		<insert id="insertT_SYS_XTYHJS" parameterType="map">
			insert into T_SYS_XTYHJS(
				XTYHJSID,
				XTJSID,
				XTYHID,
				STATE,
				DELFLAG
			)
			select 
				CHANN_ID,
				#{XTJSID},
				CHANN_ID,
				#{STATE},
				#{DELFLAG}
			from BASE_CHANN  where CHANN_ID=#{CHANN_ID}
		</insert>
		<select id="getSHIP_POINTInfo" parameterType="map" resultType="java.util.HashMap">
			select SHIP_POINT_ID,SHIP_POINT_NO,SHIP_POINT_NAME  from BASE_SHIP_POINT 
			where SHIP_POINT_NO=#{SHIP_POINT_NO} and STATE=#{STATE} and DEL_FLAG=#{DEL_FLAG}
		</select>
		
		
		
		
	<sql id="queryDynSqlChld">
		<if test="DEL_FLAG != null and DEL_FLAG != '' ">
			 and u.DEL_FLAG=#{DEL_FLAG}
		</if>
		<if test="STATE != null and STATE != '' ">
			 and u.STATE=#{STATE}
		</if>
	</sql>  
	<!-- 查询SQL -->
	<sql id="orderSqlChld">
		 <if test="orderField != null and orderField != '' ">
			 order by ${orderField}
		</if>
	</sql>
	<sql id="coreSqlChld">
		<![CDATA[ 
	     select 
	         u.DELIVER_ADDR_ID,
			 u.CHANN_ID,
			 u.DELIVER_ADDR_NO,
	         u.DELIVER_DTL_ADDR,
	         u.STATE,
	         u.DEL_FLAG,
	         u.PERSON_CON,
	         u.TEL,
	         u.TRANSPORT
	         from BASE_DELIVER_ADDR u
	   ]]>
	</sql>
	 <!-- 根据主表ID查询明细 -->
	  <select id="queryChldByFkId" parameterType="map" resultMap="DeliveraddrModelChld">
		  <include refid="coreSqlChld"/>
		  <where>
				u.CHANN_ID=#{CHANN_ID}
		   	<include refid="queryDynSqlChld" />
		  </where>
			<include refid="orderSqlChld"/>
	  </select>
	 <!--根据明细表IDS查询明细 -->
	 <select id="loadChldByIds" parameterType="map" resultType="java.util.HashMap">
		  <include refid="coreSqlChld"/>
		  <where>
		        u.DELIVER_ADDR_ID in (${DELIVER_ADDR_IDS})
		   <include refid="queryDynSqlChld" />
		  </where>
			<include refid="orderSqlChld"/>
	  </select>
	  
		<!--明细表插入 -->
	<insert id="insertChld" parameterType="map">
		<foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
		  <![CDATA[
			  insert into BASE_DELIVER_ADDR(
				 DELIVER_ADDR_ID,
				 CHANN_ID,
				 DELIVER_ADDR_NO,
		         DELIVER_DTL_ADDR,
		         STATE,
		         DEL_FLAG,
		         PERSON_CON,
		         TEL,
		         TRANSPORT,
		         TB_TIME 
			   )values(
				 #{item.DELIVER_ADDR_ID,jdbcType=VARCHAR},
				 #{item.CHANN_ID,jdbcType=VARCHAR},
				 #{item.DELIVER_ADDR_NO,jdbcType=VARCHAR},
		         #{item.DELIVER_DTL_ADDR,jdbcType=VARCHAR},
		         #{item.STATE,jdbcType=VARCHAR},
		         #{item.DEL_FLAG,jdbcType=VARCHAR},
		         #{item.PERSON_CON,jdbcType=VARCHAR},
		         #{item.TEL,jdbcType=VARCHAR},
		         #{item.TRANSPORT,jdbcType=VARCHAR},
		         to_date(#{item.TB_TIME,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				);
		   ]]>
	   </foreach>  
	</insert>
	<!--明细表更新 -->
	<update id="updateChldById" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
			<![CDATA[ update BASE_DELIVER_ADDR ]]>
			<set>
			    <if test="item.DELIVER_ADDR_NO !=null">DELIVER_ADDR_NO = #{item.DELIVER_ADDR_NO} ,</if>
				<if test="item.DELIVER_DTL_ADDR !=null">DELIVER_DTL_ADDR = #{item.DELIVER_DTL_ADDR} ,</if>
				<if test="item.STATE !=null">STATE = #{item.STATE} ,</if>
				<if test="item.DEL_FLAG !=null">DEL_FLAG = #{item.DEL_FLAG} ,</if>
				<if test="item.PERSON_CON !=null">PERSON_CON = #{item.PERSON_CON} ,</if>
				<if test="item.TEL !=null">TEL = #{item.TEL} ,</if>
				<if test="item.TRANSPORT !=null">TRANSPORT = #{item.TRANSPORT} ,</if>
				<if test="item.TB_TIME !=null">TB_TIME = to_date(#{item.TB_TIME},'yyyy-mm-dd hh24:mi:ss'),</if>
		    </set>
			<![CDATA[ where DELIVER_ADDR_ID = #{item.DELIVER_ADDR_ID};]]>
		</foreach>  
	</update>
	
	<!--根据明细IDs删除明细 -->
	<delete id="deleteChldByIds" parameterType="java.util.List">
		<![CDATA[ update BASE_DELIVER_ADDR 
		               set DEL_FLAG = #{DEL_FLAG}	 
	 	  where 
		      DELIVER_ADDR_ID in (${DELIVER_ADDR_IDS})
	    ]]>
	</delete>
	
	<!--根据主键ID删除明细 -->
	<delete id="delChldByFkId" parameterType="map">
		<![CDATA[ update BASE_DELIVER_ADDR 
		               set DEL_FLAG = #{DEL_FLAG}	 
	 	  where 
		      CHANN_ID = #{CHANN_ID}
	    ]]>
	</delete>
	
	<delete id="stopChild" parameterType="map">
		<![CDATA[ update BASE_DELIVER_ADDR 
		               set STATE = #{STATE}	 
	 	  where 
		      DELIVER_ADDR_ID in (${DELIVER_ADDR_IDS})
	    ]]>
	</delete>
	
	<select id="countAddrNo" parameterType="map" resultType="int">
		<![CDATA[
		  select count(0) from BASE_DELIVER_ADDR where CHANN_ID=#{CHANN_ID} 
		  and DELIVER_ADDR_NO in ($DELIVER_ADDR_NOS$) and DEL_FLAG=0
		]]>
		<if test="DELIVER_ADDR_IDS != null and DELIVER_ADDR_IDS!= '' ">
			and DELIVER_ADDR_ID not in(${DELIVER_ADDR_IDS})
		</if>
	</select>
	
	
	<!-- 根据渠道id获取渠道折扣 -->
	<select id="getChannDsct" parameterType="map" resultType="java.util.HashMap">
		<![CDATA[
			select b.DECT_RATE
			  from BASE_CHANN a
			  left join BASE_CHANN_DSCT b on a.CHANN_ID = b.CHANN_ID
			 where (case when NVL(a.PUNISH_FLAG, 0) != 1 then #{nrlDsct} else #{punDsct} end) = b.DECT_TYPE
			   and a.CHANN_ID = #{CHANN_ID}
		]]>
	</select>
	
	
	
	<select id="getChannRebateDsct" resultType="java.util.HashMap" parameterType="map">
		<![CDATA[
			select NVL(b.DECT_RATE,0) DECT_RATE,
				NVL(a.REBATE_TOTAL,0) REBATE_TOTAL,
				NVL(a.REBATE_CURRT,0) REBATE_CURRT,
				NVL(a.REBATE_USED,0) REBATE_USED,
				NVL(a.REBATE_FREEZE,0) REBATE_FREEZE
			  from BASE_CHANN a
			  left join BASE_CHANN_DSCT b on a.CHANN_ID = b.CHANN_ID
			 where #{DSCTTYPE} = b.DECT_TYPE
			   and a.CHANN_ID = #{CHANN_ID}
		]]>
	</select>
		<update id="updateRebateByIds" parameterType="map">
			 <![CDATA[ UPDATE BASE_CHANN b
	   set b.REBATE_TOTAL = NVL(b.REBATE_TOTAL, 0) + NVL(#{SET_REBATE}, 0) * #{DESCON},
	       b.REBATE_CURRT = NVL(b.REBATE_CURRT, 0) + NVL(#{SET_REBATE}, 0) * #{DESCON}
	   WHERE b.CHANN_ID in ($CHANN_NOS$) ]]>
		</update>
	
	<update id="upZTXX" parameterType="map">
		<![CDATA[ update T_SYS_ZTXX ]]>
		<set>
				<if test="CHANN_NAME !=null">ZTMC = #{CHANN_NAME},</if>
				<if test="STATE !=null">STATE = #{STATE},</if>
		</set>
		<![CDATA[ where ZTXXID=#{CHANN_ID} and DELFLAG=0 ]]>
	</update>
	
	<update id="upJGXX" parameterType="map">
		<![CDATA[ update T_SYS_JGXX ]]>
		<set>
				<if test="CHANN_NAME !=null">JGMC = #{CHANN_NAME},</if>
				<if test="CHANN_NAME !=null">JGJC = #{CHANN_NAME},</if>
				<if test="STATE !=null">JGZT = #{STATE},</if>
		</set>
		 <![CDATA[ where JGXXID=#{CHANN_ID} and DELFLAG=0 ]]>
	</update>
	
	<update id="upBMXX" parameterType="map">
		<![CDATA[ update T_SYS_BMXX  ]]>
		<set>
				<if test="CHANN_NAME !=null">BMMC = #{CHANN_NAME},</if>
				<if test="CHANN_NAME !=null">BMJC = #{CHANN_NAME},</if>
				<if test="STATE !=null">BMZT = #{STATE},</if>
		</set>
		<![CDATA[ where BMXXID=#{CHANN_ID} and DELFLAG=0 ]]>
	</update>
	
	<update id="upTerminal" parameterType="map">
		<![CDATA[ update BASE_TERMINAL  ]]>
		<set>
				<if test="AREA_ID !=null">AREA_ID = #{AREA_ID},</if>
				<if test="AREA_NO !=null">AREA_NO = #{AREA_NO},</if>
				<if test="AREA_NAME !=null">AREA_NAME = #{AREA_NAME},</if>
				<if test="ZONE_ID !=null">ZONE_ID = #{ZONE_ID},</if>
				<if test="NATION !=null">NATION = #{NATION},</if>
				<if test="PROV !=null">PROV = #{PROV},</if>
				<if test="CITY !=null">CITY = #{CITY},</if>
				<if test="COUNTY !=null">COUNTY = #{COUNTY},</if>
				<if test="STATE !=null">STATE = #{STATE},</if>
		</set>
		<![CDATA[ where CHANN_ID_P=#{CHANN_ID} and DEL_FLAG=0 ]]>
	</update>
	<update id="upTerminalByChannIds" parameterType="map">
		<![CDATA[ update BASE_TERMINAL  ]]>
		<set>
				<if test="AREA_ID !=null">AREA_ID = #{AREA_ID},</if>
				<if test="AREA_NO !=null">AREA_NO = #{AREA_NO},</if>
				<if test="AREA_NAME !=null">AREA_NAME = #{AREA_NAME},</if>
		</set>
		<![CDATA[ where CHANN_ID_P in (${CHANN_IDS}) and DEL_FLAG=0 ]]>
	</update>
	<!-- 报表销售订单出货明细用 -->
	<select id="queryChannInfo" resultType="java.util.HashMap" parameterType="string">
		select a.CHANN_ID,a.CHANN_NO,a.CHANN_NAME,a.SHIP_POINT_NAME,a.SHIP_POINT_ID,a.SHIP_POINT_NO,b.AREA_NO_P,b.AREA_NAME_P,b.AREA_ID_P 
		from BASE_CHANN a 
		left join BASE_AREA b on a.AREA_ID=b.AREA_ID and b.DEL_FLAG=0
		where a.CHANN_ID=#{CHANN_ID} and a.DEL_FLAG=0
	</select>
	<select id="chargQuery" parameterType="string" resultType="java.util.HashMap">
		select c.RYBH,c.XM
		from BASE_USER_CHANN_CHRG a
		left join T_SYS_XTYH b on a.USER_ID=b.XTYHID
		left join T_SYS_RYXX c on b.RYXXID=c.RYXXID
		where CHANN_ID=#{CHANN_ID}
		group by c.RYBH,c.XM
	</select>
	<select id="qryChannExp" parameterType="map" resultType="java.util.HashMap">
			<![CDATA[
					select CHANN_ID,
				       CHANN_NO,
				       CHANN_NAME,
				       CHANN_ABBR,
				       CHANN_TYPE,
				       CHAA_LVL,
				       CHANN_ID_P,
				       CHANN_NO_P,
				       CHANN_NAME_P,
				       AREA_ID,
				       AREA_NO,
				       AREA_NAME,
				       ZONE_ID,
				       NATION,
				       PROV,
				       CITY,
				       COUNTY,
				       CITY_TYPE,
				       PERSON_CON,
				       TEL,
				       MOBILE,
				       TAX,
				       POST,
				       ADDRESS,
				       EMAIL,
				       WEB,
				       LEGAL_REPRE,
				       BUSS_LIC,
				       AX_BURDEN,
				       ORG_CODE_CERT,
				       BUSS_NATRUE,
				       BUSS_SCOPE,
				       VAT_NO,
				       INVOICE_TI,
				       INVOICE_ADDR,
				       BANK_NAME,
				       BANK_ACCT,
				       FI_CMP_NO,
				       DEPOSIT,
				       DEBT_DEF,
				       PRICE_CLAUSE,
				       BUSS_LIC_ATT,
				       TAX_BURDEN_ATT,
				       ORG_CERT_ATT,
				       REMARK,
				       CREATOR,
					   CRE_NAME,
					   to_char(CRE_TIME,'yyyy-MM-DD HH24:MI:SS')CRE_TIME,
					   UPDATOR,
					   UPD_NAME,
					   to_char(UPD_TIME,'yyyy-MM-DD HH24:MI:SS')UPD_TIME,
					   DEPT_ID,
					   DEPT_NAME,
					   ORG_ID,
					   ORG_NAME,
				       REBATE_TOTAL,
				       REBATE_YEAR,
				       REBATE_CURRT,
				       REBATE_USED,
				       REBATE_FREEZE,
				       CREDIT_CURRT,
				       CREDIT_USED,
				       TEMP_CREDIT,
				       TEMP_CREDIT_VALDT,
				       PAY_RATE,
				       CREDIT_CRE_NAME,
				       to_char(CREDIT_CRE_TIME,'yyyy-MM-DD HH24:MI:SS')CREDIT_CRE_TIME,
				       REBATE_UPD_NAME,
				       to_char(REBATE_UPD_TIME,'yyyy-MM-DD HH24:MI:SS')REBATE_UPD_TIME,
				       IS_BASE_FLAG,
				       SHIP_POINT_NO,
				       SHIP_POINT_ID,
				       SHIP_POINT_NAME,
				       AREA_SER_ID,
				       AREA_SER_NO,
				       AREA_SER_NAME,
				       (case when NVL(PUNISH_FLAG,0)>0 then '是' else '否' end)PUNISH_FLAG,
				       PUNISH_REMARK,
				       DEAL_PSON_ID,
				       DEAL_PSON_NAME,
				       DEAL_TIME,
				       TERM_DECT_CTR_FLAG,
				       INI_CREDIT,
				       FREEZE_CREDIT,
				       PAYMENT_CREDIT,
				       JOIN_DATE,
				       MAX_FREEZE_DAYS,
				       OLD_CHANN_NO,
				       AREA_MANAGE_ID,
				       AREA_MANAGE_NAME,
				       AREA_MANAGE_TEL,
				       CHAA_SALE_LVL,
				       TAX_RATE,
				       COST_TYPE,
				       INIT_YEAR,
				       INIT_MONTH,
				       STATE
				  from BASE_CHANN c
					]]>
			<where>
				<include refid="queryDynSql" />
			</where>
				<include refid="orderSql"/>
	</select>
	
	<select id="queryChannByparams" parameterType="map" resultType="java.util.HashMap">
		<![CDATA[
		     select 
		       u.CHANN_ID,
		       u.CHANN_NO,
		       u.CHANN_NAME,
		       u.CHANN_TYPE,
		       u.CHAA_LVL,
		       u.CHANN_NAME_P,
		       u.AREA_NO,
		       u.AREA_NAME,
		       u.CRE_NAME,
		       u.CRE_TIME,
		       u.DEPT_NAME,
		       u.STATE,
		       u.AREA_MANAGE_NAME,
		       u.SHIP_POINT_NAME,
		       u.SHIP_POINT_NO,
		       u.SHIP_POINT_ID,
		       u.AREA_SER_NAME,
		       u.AREA_SER_NO,
		       u.AREA_SER_ID,
		       u.AREA_ID,
		       u.AREA_NO,
		       u.AREA_NAME
			   FROM BASE_CHANN u
		]]> 
		<![CDATA[  where 1=1   ]]>
			<if test="AREA_NO !=null and AREA_NO !='' "> and u.AREA_NO = #{AREA_NO} 		</if>
			<if test="AREA_NAME !=null and AREA_NAME !='' "> and u.AREA_NAME like '%'|| #{AREA_NAME} ||'%'		</if>
			<if test="CHANN_NO !=null and CHANN_NO !='' "> and u.CHANN_NO like '%'|| #{CHANN_NO} ||'%' 		</if>
			<if test="CHANN_NAME !=null and CHANN_NAME !='' "> and u.CHANN_NAME like '%'|| #{CHANN_NAME}||'%' 		</if>
			<if test="searchFlag !=null and searchFlag !='' "> and ${searchFlag}		</if>
			<if test="sql !=null and sql !='' "> ${sql}		</if>
		
	 </select>
	 
	<update id="batchUpdateStoreIn" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
		<set>
	    <if test="IS_UPDATE_STOREIN_FLAG !=null and IS_UPDATE_STOREIN_FLAG !='' "> , IS_UPDATE_STOREIN_FLAG = #{IS_UPDATE_STOREIN_FLAG} </if>
	    </set>
		<![CDATA[ where CHANN_ID in (${CHANN_IDS})]]>
	</update>
	 
	<update id="batchUpdate" parameterType="map">
		<![CDATA[ update BASE_CHANN 
		   set AREA_MANAGE_ID = #{AREA_MANAGE_ID},
		       AREA_MANAGE_NAME=#{AREA_MANAGE_NAME},
		       AREA_MANAGE_TEL=#{AREA_MANAGE_TEL}
		       where CHANN_ID = #{CHANN_ID}
		]]>
	</update>
	
	<update id="batchUpdateChann_1" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
		<set>
		    <if test="AREA_MANAGE_ID !=null and AREA_MANAGE_ID !='' "> AREA_MANAGE_ID = #{AREA_MANAGE_ID}, </if>
			<if test="AREA_MANAGE_NAME !=null and AREA_MANAGE_NAME !='' ">  AREA_MANAGE_NAME = #{AREA_MANAGE_NAME} ,</if>
			<if test="AREA_MANAGE_TEL !=null and AREA_MANAGE_TEL !='' ">  AREA_MANAGE_TEL = #{AREA_MANAGE_TEL} ,</if>
	    </set>
		<![CDATA[ where CHANN_ID in (${CHANN_IDS})]]>
	</update>
	
	<update id="batchUpdateChann_2" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
		<set>
		    <if test="AREA_ID !=null and AREA_ID !='' "> , AREA_ID = #{AREA_ID} </if>
			<if test="AREA_NO !=null and AREA_NO !='' "> , AREA_NO = #{AREA_NO} </if>
			<if test="AREA_NAME !=null and AREA_NAME !='' "> , AREA_NAME = #{AREA_NAME} </if>
	    </set>
		<![CDATA[ where CHANN_ID in (${CHANN_IDS})]]>
	</update>
	
	<update id="batchUpdateChann_3" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
		<set>
		    <if test="SHIP_POINT_NO !=null and SHIP_POINT_NO !='' "> , SHIP_POINT_NO = #{SHIP_POINT_NO} </if>
			<if test="SHIP_POINT_ID !=null and SHIP_POINT_ID !='' "> , SHIP_POINT_ID = #{SHIP_POINT_ID} </if>
			<if test="SHIP_POINT_NAME !=null and SHIP_POINT_NAME !='' "> , SHIP_POINT_NAME = #{SHIP_POINT_NAME} </if>
	    </set>
		<![CDATA[ where CHANN_ID in (${CHANN_IDS})]]>
	</update>
	<update id="batchUpdateChann_4" parameterType="map">
		<![CDATA[ update BASE_CHANN ]]>
		<set>
		    <if test="AREA_SER_ID !=null and AREA_SER_ID !='' "> , AREA_SER_ID = #{AREA_SER_ID} </if>
			<if test="AREA_SER_NO !=null and AREA_SER_NO !='' "> , AREA_SER_NO = #{AREA_SER_NO} </if>
			<if test="AREA_SER_NAME !=null and AREA_SER_NAME !='' "> , AREA_SER_NAME = #{AREA_SER_NAME} </if>
	    </set>
		<![CDATA[ where CHANN_ID in (${CHANN_IDS})]]>
	</update>
	<select id="checkAddrCount" resultType="string">
		select a.DELIVER_ADDR_NO from BASE_DELIVER_ADDR a where a.DEL_FLAG=0
		group by a.DELIVER_ADDR_NO
		having count(a.DELIVER_ADDR_NO)>1
	</select>
	
	<select id="getStoreInCount" parameterType="map"  resultType="string">
		select a.IS_UPDATE_STOREIN_FLAG 
		       from BASE_CHANN a 
		       where a.DEL_FLAG=0
		       and a.CHANN_NO = #{CHANN_NO}
	</select>
	
	<select id="getChannInfo" parameterType="map" resultMap="ChannModel">
		select c.CHANN_ID,
	           c.CHANN_NO,
	           c.CHANN_NAME,
	           c.AREA_ID,
	           c.AREA_NO,
	           c.AREA_NAME,
	           c.PERSON_CON,
	           c.MOBILE,
	           c.TEL,
	           c.ADDRESS,
	           c.ZONE_ID,
	           c.PROV,
	           c.CITY,
	           c.COUNTY,
	           c.AREA_MANAGE_ID,
	           c.AREA_MANAGE_NAME,
	           c.AREA_MANAGE_TEL,
	           c.DEL_FLAG,
	           c.STATE,
	           to_char(c.JOIN_DATE, 'yyyy-MM-DD') JOIN_DATE,
	           c.CHANN_TYPE,
	           a.AREA_ID_P,
	           a.AREA_NO_P,
	           a.AREA_NAME_P,
	           (select to_char(wmsys.wm_concat(u.TERM_NAME))
	           from BASE_TERMINAL u
	           where u.CHANN_ID_P = c.chann_id) TERM_NAMES
		       from base_chann c
		       left join BASE_AREA a on a.AREA_ID = c.AREA_ID
	           and a.del_flag = 0
	           where  c.STATE in( '启用') and c.DEL_FLAG='0' 
	           and c.CHANN_ID = #{CHANN_ID}
	</select>
	
	<select id="getMkmCount" parameterType="string" resultType="int">
	  SELECT count(*)　from base_chann c where c.AREA_MANAGE_ID = #{RYXXID}
	</select>
		<select id="checkChannInfoIntact" parameterType="string" resultType="int">
				select count(1)cnt
				  from base_chann a
				 where (a.AREA_MANAGE_NAME is null
				    or a.AREA_MANAGE_TEL is null
				    or a.AREA_NO is null
				    or a.AREA_NAME is null)
				    and a.CHANN_ID=#{CHANN_ID}
		</select>
		<select id="getChannId" parameterType="string" resultType="string">
			select CHANN_ID from BASE_CHANN where CHANN_NO=#{CHANN_NO}
		</select>
		
		<select id="getLedgerChrgList" parameterType="string" resultType="java.util.HashMap">
			select 
				a.CHANN_LEDGER_CHRG_ID,
				a.CHANN_ID,
				a.LEDGER_ID,
				a.LEDGER_NAME,
				a.LEDGER_NAME_ABBR,
				a.AMOUNT_MONEY,
				a.FREEZ_MONEY,
				a.AMOUNT_REBATE,
				a.FREEZ_REBATE,
				nvl(a.AMOUNT_REBATE,0) - nvl(a.FREEZ_REBATE,0) REBATE_CURRT,
				a.AMUNT_CREDIT,
				a.FREEZ_CREDIT,
				a.OWE_CREDIT,
				a.CREATOR,
				a.CRE_NAME,
				to_char(a.CRE_TIME,'yyyy-MM-DD HH24:MI:SS') CRE_TIME,
				a.UPDATOR,
				a.UPD_NAME,
				to_char(a.UPD_TIME,'yyyy-MM-DD HH24:MI:SS') UPD_TIME,
				a.DEL_FLAG
			from BASE_CHANN_LEDGER_CHRG a 
			where a.CHANN_ID=#{channId} and a.DEL_FLAG='0'
			order by a.LEDGER_NAME_ABBR asc
		</select>
		<select id="getLedgerChrgListByIds" parameterType="string" resultType="java.util.HashMap">
			select 
				a.CHANN_LEDGER_CHRG_ID,
				a.CHANN_ID,
				a.LEDGER_ID,
				a.LEDGER_NAME,
				a.LEDGER_NAME_ABBR,
				a.AMOUNT_MONEY,
				a.FREEZ_MONEY,
				a.AMOUNT_REBATE,
				a.FREEZ_REBATE,
				a.AMUNT_CREDIT,
				a.FREEZ_CREDIT,
				a.OWE_CREDIT,
				a.CREATOR,
				a.CRE_NAME,
				to_char(a.CRE_TIME,'yyyy-MM-DD HH24:MI:SS') CRE_TIME,
				a.UPDATOR,
				a.UPD_NAME,
				to_char(a.UPD_TIME,'yyyy-MM-DD HH24:MI:SS') UPD_TIME,
				a.DEL_FLAG
			from BASE_CHANN_LEDGER_CHRG a 
			where a.CHANN_LEDGER_CHRG_ID  in (${CHANN_LEDGER_CHRG_IDS}) and a.DEL_FLAG='0'
		</select>
		<update id="delLedChrgByLedIds" parameterType="map">
			update BASE_CHANN_LEDGER_CHRG set
			UPDATOR=#{UPDATOR},
			UPD_NAME=#{UPD_NAME},
			UPD_TIME=sysdate,
			DEL_FLAG=#{DEL_FLAG}
			where CHANN_LEDGER_CHRG_ID in (${CHANN_LEDGER_CHRG_IDS})
		</update>
		<update id="delLedChrgByLedChannId" parameterType="map">
			update BASE_CHANN_LEDGER_CHRG set
			UPDATOR=#{UPDATOR},
			UPD_NAME=#{UPD_NAME},
			UPD_TIME=sysdate,
			DEL_FLAG=#{DEL_FLAG}
			where CHANN_ID = #{CHANN_ID}
		</update>
		<insert id="insertLegerChrg" parameterType="map">
			<foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
				insert into BASE_CHANN_LEDGER_CHRG(
					CHANN_LEDGER_CHRG_ID,
					CHANN_ID,
					LEDGER_ID,
					LEDGER_NAME,
					LEDGER_NAME_ABBR,
					AMOUNT_MONEY,
					FREEZ_MONEY,
					AMOUNT_REBATE,
					FREEZ_REBATE,
					AMUNT_CREDIT,
					FREEZ_CREDIT,
					OWE_CREDIT,
					CREATOR,
					CRE_NAME,
					CRE_TIME,
					DEL_FLAG
				)values(
					#{item.CHANN_LEDGER_CHRG_ID,jdbcType=VARCHAR},
					#{item.CHANN_ID,jdbcType=VARCHAR},
					#{item.LEDGER_ID,jdbcType=VARCHAR},
					#{item.LEDGER_NAME,jdbcType=VARCHAR},
					#{item.LEDGER_NAME_ABBR,jdbcType=VARCHAR},
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					#{item.CREATOR,jdbcType=VARCHAR},
					#{item.CRE_NAME,jdbcType=VARCHAR},
					sysdate,
					#{item.DEL_FLAG,jdbcType=VARCHAR}
				);
			</foreach>
		</insert>
		
	<select id="checkLadgerDup" parameterType="string" resultType="string">
		select LEDGER_NAME
			from BASE_CHANN_LEDGER_CHRG
			where chann_id =#{CHANN_ID} and DEL_FLAG=0
			group by LEDGER_NAME,LEDGER_ID 
			having count(LEDGER_ID)>1
	</select>
	
	<update id="updateLedgerNameAbbr">
		update BASE_CHANN_LEDGER_CHRG set ledger_name_abbr=(select ztjc 
		from t_sys_ztxx where t_sys_ztxx.ztxxid=BASE_CHANN_LEDGER_CHRG.ledger_id)
		where ledger_name_abbr is null
	</update>
	
	<!-- 查询经销商表中最大的同步时间 -->
	<select id="queryMaxTbTime" resultType="String" >
		select MAX(TB_TIME) AS TB_TIME from BASE_CHANN		
	</select>
	
	
	<!-- 查询经销商收货地址表中最大的同步时间 -->
	<select id="queryBdaMaxTbTime" resultType="String" >
		select MAX(TB_TIME) AS TB_TIME from BASE_DELIVER_ADDR
	</select>
	
	<!-- 查询从NC过来需要新插入的客户/渠道数据 -->
	<select id="queryInsertNcChann" resultType="map" parameterType="map">
	  select 
		   CODE AS CHANN_ID, 
		   CODE AS CHANN_NO,
		   NAME AS CHANN_NAME,
		   SHORTNAME AS CHANN_ABBR,
		   CUSTOMER_MAINCODE AS CHANN_ID_P,
		   CUSTOMER_MAINCODE AS CHANN_NO_P,
		   CUSTOMER_MAINNAME AS CHANN_NAME_P,
		   CONTRYNAME AS NATION,
		   AREACLCODE AS AREA_NO,
		   AREACLNAME AS AREACLNAME,
		   <!-- LINKMANNAME AS PERSON_CON,		
		   PHONE AS TEL,
		   CELL AS MOBILE,
		   FAX AS TAX, -->
		   DETAILINFO AS ADDRESS,
		   EMAIL AS EMAIL,
		   <!--BANKDOCNAME AS BANK_NAME,
		    ACCNUM AS BANK_ACCT, -->
		   TAXPAYERID AS BUSS_LIC,
		   '启用' AS STATE,
		   ORGINFO AS LEDGERINFO,
		    <!-- ORGCODE AS LEDGER_ID, 
		    ORGNAME AS LEDGER_NAME, -->
			'0' AS DEL_FLAG,
			TS AS TB_TIME,
			trim(CUSTPROP) AS CUSTPROP
		 from NC_CUSTOMERVIEW t1
		 WHERE
			NOT EXISTS (
				SELECT
					1
				FROM
					BASE_CHANN t2
				WHERE
					T1.CODE = t2.CHANN_ID
			)			
		<if test="syncTime !=null and syncTime !='' ">
		 <!-- and <![CDATA[ TS >= to_date(#{syncTime},'yyyy-MM-DD HH24:MI:SS')]]> -->
		 and TS > #{syncTime}
		</if>
	</select>
	
	<!-- 查询从NC过来需要更新的客户/渠道数据 -->
	<select id="queryUpdateNcChann" resultType="map" parameterType="map">
	  select 
		   CODE AS CHANN_ID, 
		   CODE AS CHANN_NO,
		   NAME AS CHANN_NAME,
		   SHORTNAME AS CHANN_ABBR,
		   CUSTOMER_MAINCODE AS CHANN_ID_P,
		   CUSTOMER_MAINCODE AS CHANN_NO_P,
		   CUSTOMER_MAINNAME AS CHANN_NAME_P,
		   CONTRYNAME AS NATION,
		   AREACLCODE AS AREA_NO,
		   AREACLNAME AS AREACLNAME,
		   <!-- LINKMANNAME AS PERSON_CON,		
		   PHONE AS TEL,
		   CELL AS MOBILE,
		   FAX AS TAX, -->
		   DETAILINFO AS ADDRESS,
		   EMAIL AS EMAIL,
		   <!--BANKDOCNAME AS BANK_NAME,
		    ACCNUM AS BANK_ACCT, -->
		   TAXPAYERID AS BUSS_LIC,
		   '启用' AS STATE,
		   ORGINFO AS LEDGERINFO,
		    <!-- ORGCODE AS LEDGER_ID,
		    ORGNAME AS LEDGER_NAME, --> 
			'0' AS DEL_FLAG,
			TS AS TB_TIME,
			trim(CUSTPROP) AS CUSTPROP 
		 from NC_CUSTOMERVIEW t1
		 WHERE
			 EXISTS (
				SELECT
					1
				FROM
					BASE_CHANN t2
				WHERE
					T1.CODE = t2.CHANN_ID
			)			
		<if test="syncTime !=null and syncTime !='' ">
		 <!-- and <![CDATA[ TS >= to_date(#{syncTime},'yyyy-MM-DD HH24:MI:SS')]]> -->
		 and TS > #{syncTime}
		</if>	
	</select>
	
	<insert id="insertChannList" parameterType="map">
		<foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
			<![CDATA[
			 insert into BASE_CHANN(
			 	CHANN_ID,CHANN_NO,CHANN_NAME,CHANN_ABBR,CHANN_TYPE,CHAA_LVL,CHANN_ID_P,CHANN_NO_P,CHANN_NAME_P,AREA_ID,
			 	AREA_NO,AREA_NAME,ZONE_ID,NATION,PROV,CITY,COUNTY,CITY_TYPE,PERSON_CON,TEL,MOBILE,TAX,POST,ADDRESS,EMAIL,
			 	WEB,LEGAL_REPRE,BUSS_LIC,AX_BURDEN,ORG_CODE_CERT,BUSS_NATRUE,BUSS_SCOPE,VAT_NO,INVOICE_TI,INVOICE_ADDR,
			 	BANK_NAME,BANK_ACCT,FI_CMP_NO,DEPOSIT,DEBT_DEF,PRICE_CLAUSE,BUSS_LIC_ATT,TAX_BURDEN_ATT,ORG_CERT_ATT,STATE,
			 	REMARK,CREATOR,CRE_NAME,CRE_TIME,DEPT_ID,DEPT_NAME,ORG_ID,ORG_NAME,LEDGER_ID,
			 	LEDGER_NAME,DEL_FLAG,PAY_RATE,SHIP_POINT_ID,SHIP_POINT_NO,SHIP_POINT_NAME,AREA_SER_ID,AREA_SER_NO,AREA_SER_NAME,
			 	TERM_DECT_CTR_FLAG,PUNISH_FLAG,JOIN_DATE,IS_BASE_FLAG,AREA_MANAGE_ID,AREA_MANAGE_NAME,AREA_MANAGE_TEL,CHAA_SALE_LVL,INIT_YEAR,INIT_MONTH,
			 	TAX_RATE,COST_TYPE,TB_TIME
			 	)
			 values(
				#{item.CHANN_ID,jdbcType=VARCHAR},
				#{item.CHANN_NO,jdbcType=VARCHAR},
				#{item.CHANN_NAME,jdbcType=VARCHAR},
				#{item.CHANN_ABBR,jdbcType=VARCHAR},
				#{item.CHANN_TYPE,jdbcType=VARCHAR},
				#{item.CHAA_LVL,jdbcType=VARCHAR},
				#{item.CHANN_ID_P,jdbcType=VARCHAR},
				#{item.CHANN_NO_P,jdbcType=VARCHAR},
				#{item.CHANN_NAME_P,jdbcType=VARCHAR},
				#{item.AREA_ID,jdbcType=VARCHAR},
			 	#{item.AREA_NO,jdbcType=VARCHAR},
			 	#{item.AREA_NAME,jdbcType=VARCHAR},
			 	#{item.ZONE_ID,jdbcType=VARCHAR},
			 	#{item.NATION,jdbcType=VARCHAR},
			 	#{item.PROV,jdbcType=VARCHAR},
			 	#{item.CITY,jdbcType=VARCHAR},
			 	#{item.COUNTY,jdbcType=VARCHAR},
			 	#{item.CITY_TYPE,jdbcType=VARCHAR},
			 	#{item.PERSON_CON,jdbcType=VARCHAR},
			 	#{item.TEL,jdbcType=VARCHAR},
			 	#{item.MOBILE,jdbcType=VARCHAR},
			 	#{item.TAX,jdbcType=VARCHAR},
			 	#{item.POST,jdbcType=VARCHAR},
			 	#{item.ADDRESS,jdbcType=VARCHAR},
			 	#{item.EMAIL,jdbcType=VARCHAR},
			 	#{item.WEB,jdbcType=VARCHAR},
			 	#{item.LEGAL_REPRE,jdbcType=VARCHAR},
			 	#{item.BUSS_LIC,jdbcType=VARCHAR},
			 	#{item.AX_BURDEN,jdbcType=VARCHAR},
			 	#{item.ORG_CODE_CERT,jdbcType=VARCHAR},
			 	#{item.BUSS_NATRUE,jdbcType=VARCHAR},
			 	#{item.BUSS_SCOPE,jdbcType=VARCHAR},
			 	#{item.VAT_NO,jdbcType=VARCHAR},
			 	#{item.INVOICE_TI,jdbcType=VARCHAR},
			 	#{item.INVOICE_ADDR,jdbcType=VARCHAR},
			 	#{item.BANK_NAME,jdbcType=VARCHAR},
			 	#{item.BANK_ACCT,jdbcType=VARCHAR},
			 	#{item.FI_CMP_NO,jdbcType=VARCHAR},
			 	#{item.DEPOSIT,jdbcType=VARCHAR},
			 	#{item.DEBT_DEF,jdbcType=VARCHAR},
			 	#{item.PRICE_CLAUSE,jdbcType=VARCHAR},
			 	#{item.BUSS_LIC_ATT,jdbcType=VARCHAR},
			 	#{item.TAX_BURDEN_ATT,jdbcType=VARCHAR},
			 	#{item.ORG_CERT_ATT,jdbcType=VARCHAR},
			 	#{item.STATE,jdbcType=VARCHAR},
			 	#{item.REMARK,jdbcType=VARCHAR},
			 	#{item.CREATOR,jdbcType=VARCHAR},
			 	#{item.CRE_NAME,jdbcType=VARCHAR},
			 	sysdate,
			 	#{item.DEPT_ID,jdbcType=VARCHAR},
			 	#{item.DEPT_NAME,jdbcType=VARCHAR},
			 	#{item.ORG_ID,jdbcType=VARCHAR},
			 	#{item.ORG_NAME,jdbcType=VARCHAR},
			 	#{item.LEDGER_ID,jdbcType=VARCHAR},
			 	#{item.LEDGER_NAME,jdbcType=VARCHAR},
			 	#{item.DEL_FLAG,jdbcType=VARCHAR},
			 	#{item.PAY_RATE,jdbcType=VARCHAR},
			 	#{item.SHIP_POINT_ID,jdbcType=VARCHAR},
			 	#{item.SHIP_POINT_NO,jdbcType=VARCHAR},
			 	#{item.SHIP_POINT_NAME,jdbcType=VARCHAR},
			 	#{item.AREA_SER_ID,jdbcType=VARCHAR},
			 	#{item.AREA_SER_NO,jdbcType=VARCHAR},
			 	#{item.AREA_SER_NAME,jdbcType=VARCHAR},
			 	#{item.TERM_DECT_CTR_FLAG,jdbcType=VARCHAR},
			 	#{item.PUNISH_FLAG,jdbcType=VARCHAR},
			 	to_date(#{item.JOIN_DATE,jdbcType=VARCHAR},'yyyy-MM-DD'),
			 	#{item.IS_BASE_FLAG,jdbcType=VARCHAR},
			 	#{item.AREA_MANAGE_ID,jdbcType=VARCHAR},
			 	#{item.AREA_MANAGE_NAME,jdbcType=VARCHAR},
			 	#{item.AREA_MANAGE_TEL,jdbcType=VARCHAR},
			 	#{item.CHAA_SALE_LVL,jdbcType=VARCHAR},
			 	#{item.INIT_YEAR,jdbcType=VARCHAR},
			 	#{item.INIT_MONTH,jdbcType=VARCHAR},
			 	#{item.TAX_RATE,jdbcType=VARCHAR},
			 	#{item.COST_TYPE,jdbcType=VARCHAR},
			 	to_date(#{item.TB_TIME,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			 );
			]]>
		</foreach>
	</insert>
	
	<update id="updateChannList" parameterType="map">
	  <foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
	  	<![CDATA[ update BASE_CHANN ]]>
		 <set>
				<if test="item.CHANN_NO !=null">CHANN_NO = #{item.CHANN_NO},</if>
				<if test="item.CHANN_NAME !=null">CHANN_NAME = #{item.CHANN_NAME},</if>
				<if test="item.CHANN_ABBR !=null">CHANN_ABBR = #{item.CHANN_ABBR},</if>
				<if test="item.CHANN_TYPE !=null">CHANN_TYPE = #{item.CHANN_TYPE},</if>
				<if test="item.CHAA_LVL !=null">CHAA_LVL = #{item.CHAA_LVL},</if>
				<if test="item.CHANN_ID_P !=null">CHANN_ID_P = #{item.CHANN_ID_P},</if>
				<if test="item.CHANN_NO_P !=null">CHANN_NO_P = #{item.CHANN_NO_P},</if>
				<if test="item.CHANN_NAME_P !=null">CHANN_NAME_P = #{item.CHANN_NAME_P},</if>
				<if test="item.AREA_ID !=null">AREA_ID = #{item.AREA_ID},</if>
				<if test="item.AREA_NO !=null">AREA_NO = #{item.AREA_NO},</if>
				<if test="item.AREA_NAME !=null">AREA_NAME = #{item.AREA_NAME},</if>
				<if test="item.ZONE_ID !=null">ZONE_ID = #{item.ZONE_ID},</if>
				<if test="item.NATION !=null">NATION = #{item.NATION},</if>
				<if test="item.PROV !=null">PROV = #{item.PROV},</if>
				<if test="item.CITY !=null">CITY = #{item.CITY},</if>
				<if test="item.COUNTY !=null">COUNTY = #{item.COUNTY},</if>
				<if test="item.CITY_TYPE !=null">CITY_TYPE = #{item.CITY_TYPE},</if>
				<if test="item.PERSON_CON !=null">PERSON_CON = #{item.PERSON_CON},</if>
				<if test="item.TEL !=null">TEL = #{item.TEL},</if>
				<if test="item.MOBILE !=null">MOBILE = #{item.MOBILE},</if>
				<if test="item.TAX !=null">TAX = #{item.TAX},</if>
				<if test="item.POST !=null">POST = #{item.POST},</if>
				<if test="item.ADDRESS !=null">ADDRESS = #{item.ADDRESS},</if>
				<if test="item.EMAIL !=null">EMAIL = #{item.EMAIL},</if>
				<if test="item.WEB !=null">WEB = #{item.WEB},</if>
				<if test="item.LEGAL_REPRE !=null">LEGAL_REPRE = #{item.LEGAL_REPRE},</if>
				<if test="item.BUSS_LIC !=null">BUSS_LIC = #{item.BUSS_LIC},</if>
				<if test="item.AX_BURDEN !=null">AX_BURDEN = #{item.AX_BURDEN},</if>
				<if test="item.ORG_CODE_CERT !=null">ORG_CODE_CERT = #{item.ORG_CODE_CERT},</if>
				<if test="item.BUSS_NATRUE !=null">BUSS_NATRUE = #{item.BUSS_NATRUE},</if>
				<if test="item.BUSS_SCOPE !=null">BUSS_SCOPE = #{item.BUSS_SCOPE},</if>
				<if test="item.VAT_NO !=null">VAT_NO = #{item.VAT_NO},</if>
				<if test="item.LEDGER_ID !=null">LEDGER_ID = #{item.LEDGER_ID},</if>
				<if test="item.LEDGER_NAME !=null">LEDGER_NAME = #{item.LEDGER_NAME},</if>
				<if test="item.INVOICE_TI !=null">INVOICE_TI = #{item.INVOICE_TI},</if>
				<if test="item.INVOICE_ADDR !=null">INVOICE_ADDR = #{item.INVOICE_ADDR},</if>
				<if test="item.BANK_NAME !=null">BANK_NAME = #{item.BANK_NAME},</if>
				<if test="item.BANK_ACCT !=null">BANK_ACCT = #{item.BANK_ACCT},</if>
				<if test="item.FI_CMP_NO !=null">FI_CMP_NO = #{item.FI_CMP_NO},</if>
				<if test="item.DEPOSIT !=null">DEPOSIT = #{item.DEPOSIT},</if>
				<if test="item.DEBT_DEF !=null">DEBT_DEF = #{item.DEBT_DEF},</if>
				<if test="item.PRICE_CLAUSE !=null">PRICE_CLAUSE = #{item.PRICE_CLAUSE},</if>
				<if test="item.BUSS_LIC_ATT !=null">BUSS_LIC_ATT = #{item.BUSS_LIC_ATT},</if>
				<if test="item.TAX_BURDEN_ATT !=null">TAX_BURDEN_ATT = #{item.TAX_BURDEN_ATT},</if>
				<if test="item.ORG_CERT_ATT !=null">ORG_CERT_ATT = #{item.ORG_CERT_ATT},</if>
				<if test="item.STATE !=null">STATE = #{item.STATE},</if>
				<if test="item.REMARK !=null">REMARK = #{item.REMARK},</if>
				<if test="item.UPDATOR !=null">UPDATOR = #{item.UPDATOR},</if>
				<if test="item.UPD_NAME !=null">UPD_NAME = #{item.UPD_NAME},</if>
				<if test="item.UPD_TIME !=null">UPD_TIME = sysdate,</if>
				<if test="item.PAY_RATE !=null">PAY_RATE = #{item.PAY_RATE},</if>
				<if test="item.SHIP_POINT_ID !=null">SHIP_POINT_ID = #{item.SHIP_POINT_ID},</if>
				<if test="item.SHIP_POINT_NO !=null">SHIP_POINT_NO = #{item.SHIP_POINT_NO},</if>
				<if test="item.SHIP_POINT_NAME !=null">SHIP_POINT_NAME = #{item.SHIP_POINT_NAME},</if>
				<if test="item.AREA_SER_ID !=null">AREA_SER_ID = #{item.AREA_SER_ID},</if>
				<if test="item.AREA_SER_NO !=null">AREA_SER_NO = #{item.AREA_SER_NO},</if>
				<if test="item.AREA_SER_NAME !=null">AREA_SER_NAME = #{item.AREA_SER_NAME},</if>
				<if test="item.TERM_DECT_CTR_FLAG !=null">TERM_DECT_CTR_FLAG = #{item.TERM_DECT_CTR_FLAG},</if>
				<if test="item.JOIN_DATE !=null">JOIN_DATE = to_date(#{item.JOIN_DATE},'yyyy-MM-DD'),</if>
				<if test="item.INIT_YEAR !=null">INIT_YEAR = #{item.INIT_YEAR},</if>
				<if test="item.INIT_MONTH !=null">INIT_MONTH = #{item.INIT_MONTH},</if>
				<if test="item.TAX_RATE !=null">TAX_RATE = #{item.TAX_RATE},</if>
				<if test="item.COST_TYPE !=null">COST_TYPE = #{item.COST_TYPE},</if>
				<if test="item.REBATE_TOTAL !=null">REBATE_TOTAL = #{item.REBATE_TOTAL},</if>
				<if test="item.REBATE_CURRT !=null">REBATE_CURRT = #{item.REBATE_CURRT},</if>
				<if test="item.REBATE_USED !=null">REBATE_USED = #{item.REBATE_USED},</if>
				<if test="item.REBATE_UPD_NAME !=null">REBATE_UPD_NAME = #{item.REBATE_UPD_NAME},</if>
				<if test="item.REBATE_UPD_TIME !=null">REBATE_UPD_TIME = sysdate,</if>
				<if test="item.CHAA_SALE_LVL !=null">CHAA_SALE_LVL = #{item.CHAA_SALE_LVL},</if>
				<if test="item.AREA_MANAGE_ID !=null">AREA_MANAGE_ID = #{item.AREA_MANAGE_ID},</if>
				<if test="item.AREA_MANAGE_NAME !=null">AREA_MANAGE_NAME = #{item.AREA_MANAGE_NAME},</if>
				<if test="item.AREA_MANAGE_TEL !=null">AREA_MANAGE_TEL = #{item.AREA_MANAGE_TEL},</if>
				<if test="item.IS_UPDATE_STOREIN_FLAG !=null">IS_UPDATE_STOREIN_FLAG = #{item.IS_UPDATE_STOREIN_FLAG},</if>
				<if test="item.TB_TIME !=null">TB_TIME = to_date(#{item.TB_TIME},'yyyy-mm-dd hh24:mi:ss'),</if>
		   </set>
		<![CDATA[ where CHANN_ID = #{item.CHANN_ID}; ]]>
	   </foreach>
	</update>
	
	<!-- 跟前渠道id和账套ID查询记录 -->
	<select id="getChannLedgerByChannAndLeder" parameterType="map" resultType="java.util.HashMap">
	      select 
				a.CHANN_LEDGER_CHRG_ID,
				a.CHANN_ID,
				a.LEDGER_ID,
				a.LEDGER_NAME,
				a.LEDGER_NAME_ABBR,
				a.AMOUNT_MONEY,
				a.FREEZ_MONEY,
				a.AMOUNT_REBATE,
				a.FREEZ_REBATE,
				nvl(a.AMOUNT_REBATE,0) - nvl(a.FREEZ_REBATE,0) REBATE_CURRT,
				a.AMUNT_CREDIT,
				a.FREEZ_CREDIT,
				a.OWE_CREDIT,
				a.CREATOR,
				a.CRE_NAME,
				to_char(a.CRE_TIME,'yyyy-MM-DD HH24:MI:SS') CRE_TIME,
				a.UPDATOR,
				a.UPD_NAME,
				to_char(a.UPD_TIME,'yyyy-MM-DD HH24:MI:SS') UPD_TIME,
				a.DEL_FLAG
			from BASE_CHANN_LEDGER_CHRG a 
			where a.CHANN_ID=#{CHANN_ID} and a.LEDGER_ID=#{LEDGER_ID} and a.DEL_FLAG='0'
	</select>
	
	<!-- 批量更新渠道账套关系表 -->
	<update id="updateChannLedgerId" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=""  open="begin" close="end;" >
			<![CDATA[ update BASE_CHANN_LEDGER_CHRG ]]>
			<set>
				<if test="item.CHANN_ID !=null and item.CHANN_ID !='' "><![CDATA[CHANN_ID = #{item.CHANN_ID}]]>,</if>
				<if test="item.LEDGER_ID !=null and item.LEDGER_ID !='' "><![CDATA[LEDGER_ID = #{item.LEDGER_ID}]]>,</if>
				<if test="item.LEDGER_NAME !=null and item.LEDGER_NAME !='' "><![CDATA[LEDGER_NAME = #{item.LEDGER_NAME}]]>,</if>
			</set>
			<![CDATA[ where CHANN_LEDGER_CHRG_ID = #{item.CHANN_LEDGER_CHRG_ID}; ]]>
		</foreach>
	</update>
	
	<!-- 查询从NC过来需要新插入的地址 -->
	<select id="queryInsertNcAddr" resultType="map" parameterType="map">
		select
           PK_ADDRESS AS DELIVER_ADDR_ID,		    
		   CUSTOMERCODE AS CHANN_ID,
		   ADDRESSCODE AS DELIVER_ADDR_NO, 
		   DETAILINFO  AS DELIVER_DTL_ADDR,
		   LINKMANNAME AS PERSON_CON,
		   CELL AS TEL,
		   TS AS TB_TIME   
		from NC_CUSTADDRESSVIEW t1 
		where 
			NOT EXISTS (
				SELECT
					1
				FROM
					BASE_DELIVER_ADDR t2
				WHERE
					T1.CUSTOMERCODE = t2.CHANN_ID
				and T1.PK_ADDRESS = T2.DELIVER_ADDR_ID
			)	
		
		<if test="syncTime !=null and syncTime !='' ">
		 <!-- and <![CDATA[ TS >= to_date(#{syncTime},'yyyy-MM-DD HH24:MI:SS')]]> -->
		 and TS > #{syncTime}
		</if>
	</select>
	
	<!-- 查询从NC过来需要更新的地址 -->
	<select id="queryUpdateNcAddr" resultType="map" parameterType="map">
		select
		   PK_ADDRESS AS DELIVER_ADDR_ID, 
		   CUSTOMERCODE AS CHANN_ID,
		   ADDRESSCODE AS DELIVER_ADDR_NO, 
		   DETAILINFO  AS DELIVER_DTL_ADDR,
		   LINKMANNAME AS PERSON_CON,
		   CELL AS TEL,
		   TS AS TB_TIME   
		from NC_CUSTADDRESSVIEW t1 
		where 
			NOT EXISTS (
				SELECT
					1
				FROM
					BASE_DELIVER_ADDR t2
				WHERE
					T1.CUSTOMERCODE = t2.CHANN_ID
				and T1.PK_ADDRESS = T2.DELIVER_ADDR_ID
			)	
		
		<if test="syncTime !=null and syncTime !='' ">
		 <!-- and <![CDATA[ TS >= to_date(#{syncTime},'yyyy-MM-DD HH24:MI:SS')]]> -->
		 and TS > #{syncTime}
		</if>
	</select>
</mapper>

